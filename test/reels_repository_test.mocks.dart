// Mocks generated by Mockito 5.4.6 from annotations
// in blocapidemo/test/reels_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:blocapidemo/business/models/app_error.dart' as _i6;
import 'package:blocapidemo/business/models/reel.dart' as _i5;
import 'package:blocapidemo/services/api/api_service.dart' as _i2;
import 'package:blocapidemo/services/api/assets_service.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:oxidized/oxidized.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i5.Reel>, _i6.AppError>> fetchReels() =>
      (super.noSuchMethod(
            Invocation.method(#fetchReels, []),
            returnValue:
                _i3.Future<_i4.Result<List<_i5.Reel>, _i6.AppError>>.value(
                  _i7.dummyValue<_i4.Result<List<_i5.Reel>, _i6.AppError>>(
                    this,
                    Invocation.method(#fetchReels, []),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<List<_i5.Reel>, _i6.AppError>>);
}

/// A class which mocks [AssetsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetsService extends _i1.Mock implements _i8.AssetsService {
  MockAssetsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<String, _i6.AppError>>
  fetchNetworksConfigurationFromAssets() =>
      (super.noSuchMethod(
            Invocation.method(#fetchNetworksConfigurationFromAssets, []),
            returnValue: _i3.Future<_i4.Result<String, _i6.AppError>>.value(
              _i7.dummyValue<_i4.Result<String, _i6.AppError>>(
                this,
                Invocation.method(#fetchNetworksConfigurationFromAssets, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<String, _i6.AppError>>);

  @override
  _i3.Future<_i4.Result<String, _i6.AppError>>
  fetchNetworksConfigurationFromRemote() =>
      (super.noSuchMethod(
            Invocation.method(#fetchNetworksConfigurationFromRemote, []),
            returnValue: _i3.Future<_i4.Result<String, _i6.AppError>>.value(
              _i7.dummyValue<_i4.Result<String, _i6.AppError>>(
                this,
                Invocation.method(#fetchNetworksConfigurationFromRemote, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<String, _i6.AppError>>);

  @override
  _i3.Future<_i4.Result<String, _i6.AppError>> fetchApiUrl() =>
      (super.noSuchMethod(
            Invocation.method(#fetchApiUrl, []),
            returnValue: _i3.Future<_i4.Result<String, _i6.AppError>>.value(
              _i7.dummyValue<_i4.Result<String, _i6.AppError>>(
                this,
                Invocation.method(#fetchApiUrl, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<String, _i6.AppError>>);
}
